{
  "name": "@mjackson/lazy-file",
  "version": "3.3.1",
  "description": "Lazy, streaming files for JavaScript",
  "author": "Michael Jackson <mjijackson@gmail.com>",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mjackson/remix-the-web.git",
    "directory": "packages/lazy-file"
  },
  "homepage": "https://github.com/mjackson/remix-the-web/tree/main/packages/lazy-file#readme",
  "license": "MIT",
  "files": [
    "LICENSE",
    "README.md",
    "dist",
    "src"
  ],
  "type": "module",
  "types": "./dist/lazy-file.d.ts",
  "module": "./dist/lazy-file.js",
  "main": "./dist/lazy-file.cjs",
  "exports": {
    ".": {
      "types": "./dist/lazy-file.d.ts",
      "import": "./dist/lazy-file.js",
      "require": "./dist/lazy-file.cjs",
      "default": "./dist/lazy-file.js"
    },
    "./fs": {
      "types": "./dist/fs.d.ts",
      "import": "./dist/fs.js",
      "require": "./dist/fs.cjs",
      "default": "./dist/fs.js"
    },
    "./package.json": "./package.json"
  },
  "dependencies": {
    "mrmime": "^2.0.0"
  },
  "devDependencies": {
    "@types/node": "^22.5.0",
    "esbuild": "^0.25.5"
  },
  "scripts": {
    "build:types": "tsc --project tsconfig.build.json",
    "build:esm": "esbuild src/lazy-file.ts --bundle --outfile=dist/lazy-file.js --format=esm --platform=neutral --sourcemap",
    "build:cjs": "esbuild src/lazy-file.ts --bundle --outfile=dist/lazy-file.cjs --format=cjs --platform=neutral --sourcemap",
    "build:esm:fs": "esbuild src/fs.ts --bundle --outfile=dist/fs.js --format=esm --platform=node --sourcemap",
    "build:cjs:fs": "esbuild src/fs.ts --bundle --outfile=dist/fs.cjs --format=cjs --platform=node --sourcemap",
    "build": "pnpm run clean && pnpm run build:types && pnpm run build:esm && pnpm run build:cjs && pnpm run build:esm:fs && pnpm run build:cjs:fs",
    "clean": "rm -rf dist",
    "test": "node --experimental-strip-types --disable-warning=ExperimentalWarning --test ./src/**/*.test.ts",
    "prepublishOnly": "pnpm run build"
  },
  "keywords": [
    "file",
    "buffer",
    "blob"
  ]
}
